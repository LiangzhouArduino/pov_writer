/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package my.pov_writer;

import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.awt.event.*;
import java.awt.color.ColorSpace;
import java.util.Arrays;
import java.io.*;
import java.lang.*;

/**
 *
 * @author zhijun
 */
public class pov_writer_ui extends javax.swing.JFrame {

    /**
     * Creates new form pov_writer_ui
     */
    public pov_writer_ui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogAbout = new javax.swing.JDialog();
        jLabelVersion = new javax.swing.JLabel();
        jLabelAuthor = new javax.swing.JLabel();
        jPanelBottom = new javax.swing.JPanel();
        jButtonWrite = new javax.swing.JButton();
        jButtonCov = new javax.swing.JButton();
        jPanelShow = new javax.swing.JPanel();
        jScrollPaneText = new javax.swing.JScrollPane();
        jTextAreaHex = new javax.swing.JTextArea();
        jMenuBarTop = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemOpen = new javax.swing.JMenuItem();
        jMenuItemQuit = new javax.swing.JMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        jMenuItemAbout = new javax.swing.JMenuItem();

        jDialogAbout.setTitle("About");
        jDialogAbout.setAlwaysOnTop(true);
        jDialogAbout.setResizable(false);

        jLabelVersion.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabelVersion.setText("beta 1.0");
        jLabelVersion.setToolTipText("Version");

        jLabelAuthor.setFont(new java.awt.Font("WenQuanYi Micro Hei Mono", 0, 18)); // NOI18N
        jLabelAuthor.setText("刀客出品，必属精品！");

        javax.swing.GroupLayout jDialogAboutLayout = new javax.swing.GroupLayout(jDialogAbout.getContentPane());
        jDialogAbout.getContentPane().setLayout(jDialogAboutLayout);
        jDialogAboutLayout.setHorizontalGroup(
            jDialogAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogAboutLayout.createSequentialGroup()
                .addGap(173, 173, 173)
                .addComponent(jLabelVersion)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogAboutLayout.createSequentialGroup()
                .addContainerGap(116, Short.MAX_VALUE)
                .addComponent(jLabelAuthor)
                .addGap(104, 104, 104))
        );
        jDialogAboutLayout.setVerticalGroup(
            jDialogAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogAboutLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabelVersion)
                .addGap(32, 32, 32)
                .addComponent(jLabelAuthor)
                .addContainerGap(89, Short.MAX_VALUE))
        );

        jDialogAbout.getAccessibleContext().setAccessibleParent(this);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jButtonWrite.setText("write");
        jButtonWrite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonWriteActionPerformed(evt);
            }
        });

        jButtonCov.setText("convert");
        jButtonCov.setPreferredSize(new java.awt.Dimension(80, 30));
        jButtonCov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCovActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBottomLayout = new javax.swing.GroupLayout(jPanelBottom);
        jPanelBottom.setLayout(jPanelBottomLayout);
        jPanelBottomLayout.setHorizontalGroup(
            jPanelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBottomLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonCov, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonWrite)
                .addGap(152, 152, 152))
        );
        jPanelBottomLayout.setVerticalGroup(
            jPanelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBottomLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonWrite)
                    .addComponent(jButtonCov, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelShow.setBackground(new java.awt.Color(254, 254, 254));
        jPanelShow.setPreferredSize(new java.awt.Dimension(300, 300));

        javax.swing.GroupLayout jPanelShowLayout = new javax.swing.GroupLayout(jPanelShow);
        jPanelShow.setLayout(jPanelShowLayout);
        jPanelShowLayout.setHorizontalGroup(
            jPanelShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        jPanelShowLayout.setVerticalGroup(
            jPanelShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jTextAreaHex.setEditable(false);
        jTextAreaHex.setColumns(15);
        jTextAreaHex.setRows(5);
        jScrollPaneText.setViewportView(jTextAreaHex);

        jMenuFile.setText("File");

        jMenuItemOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemOpen.setText("Open");
        jMenuItemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOpenActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemOpen);

        jMenuItemQuit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemQuit.setText("Quit");
        jMenuItemQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemQuitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemQuit);

        jMenuBarTop.add(jMenuFile);

        jMenuHelp.setText("Help");

        jMenuItemAbout.setText("About");
        jMenuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAboutActionPerformed(evt);
            }
        });
        jMenuHelp.add(jMenuItemAbout);

        jMenuBarTop.add(jMenuHelp);

        setJMenuBar(jMenuBarTop);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelBottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelShow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(jScrollPaneText, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelShow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPaneText))
                .addGap(18, 18, 18)
                .addComponent(jPanelBottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonWriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonWriteActionPerformed
        int covW, covH;
        covW = covImage.getIconWidth();
        covH = covImage.getIconHeight();
        BufferedImage bufferedImage = new BufferedImage(covW, covH, BufferedImage.TYPE_BYTE_BINARY);
        bufferedImage.getGraphics().drawImage(covImage.getImage(), 0, 0, covW, covH, null);
        int i, j, degree = 4, ignore = 3;
        int pixX, pixY, centerX, centerY;
        centerX = covW / 2;
        centerY = covH / 2;
        for (i = 0; i < 360; i += degree) {
            int hex = 0, mask = 1;
            for (j = 0; j < 16; j++) {
                pixX = centerX + (int) Math.round(Math.sin(i) * (ignore + j));
                pixY = centerY + (int) Math.round(Math.cos(i) * (ignore + j));
                try {
                    if ((bufferedImage.getRGB(pixX, pixY) & 0xFFFFFF) == 0) {
                        hex += mask;
                    }
                } catch (Exception e) {
                }
                mask = mask << 1;
//                jTextAreaHex.append("rgb:" + Integer.toBinaryString(bufferedImage.getRGB(pixX, pixY)) + "\n");
            }
            String hexStr = Integer.toHexString(hex);
            int pre0;
            pre0 = 4 - hexStr.length();
            while (pre0 > 0) {
                hexStr = "0" + hexStr;
                pre0--;
            }
            jTextAreaHex.append("0x" + hexStr + "\n");
        }
    }//GEN-LAST:event_jButtonWriteActionPerformed

    private void jMenuItemQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemQuitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItemQuitActionPerformed

    private void jMenuItemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOpenActionPerformed
        JFileChooser fileChooser;
        fileChooser = new JFileChooser();
        int returnValue = fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            if (selectedFile != null) {
                String filename = selectedFile.getAbsolutePath();
                try {
                    Image image = ImageIO.read(new File(filename));
                    resizeImage = new ImageIcon();
                    int srcH = image.getHeight(null);
                    int srcW = image.getWidth(null);
                    if (srcH > srcW) {
                        resizeImage.setImage(image.getScaledInstance(-1, 300, Image.SCALE_DEFAULT));
                    } else {
                        resizeImage.setImage(image.getScaledInstance(300, -1, Image.SCALE_DEFAULT));
                    }
                    jLabelImage = new JLabel(resizeImage);
                    jLabelImage.setBounds(0, 0, resizeImage.getIconWidth(), resizeImage.getIconHeight());
                    jLabelImage.setVisible(true);
                    jPanelShow.add(jLabelImage);
                    repaint();
                } catch (IOException ioe) {
                    System.err.println("Error reading file");
                }
            }
        }
    }//GEN-LAST:event_jMenuItemOpenActionPerformed

    private void jButtonCovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCovActionPerformed
        if (jLabelImage == null) {
            return;
        }
        int rsW, rsH;
        rsW = resizeImage.getIconWidth();
        rsH = resizeImage.getIconHeight();
        BufferedImage bufferedImage = new BufferedImage(rsW, rsH, BufferedImage.TYPE_BYTE_BINARY);
        bufferedImage.getGraphics().drawImage(resizeImage.getImage(), 0, 0, rsW, rsH, null);
        resizeImage.setImage(bufferedImage);
        if (rsW > rsH) {
            covImage = new ImageIcon(resizeImage.getImage().getScaledInstance(40, -1, Image.SCALE_DEFAULT));
            resizeImage.setImage(covImage.getImage().getScaledInstance(300, -1, Image.SCALE_DEFAULT));
        } else {
            covImage = new ImageIcon(resizeImage.getImage().getScaledInstance(-1, 40, Image.SCALE_DEFAULT));
            resizeImage.setImage(covImage.getImage().getScaledInstance(-1, 300, Image.SCALE_DEFAULT));
        }
        jLabelImage.setIcon(resizeImage);
        repaint();
        //bufferedImage = new ColorConvertOp(ColorSpace.getInstance(ColorSpace.CS_GRAY), null).filter(bufferedImage, null);
    }//GEN-LAST:event_jButtonCovActionPerformed

    private void jMenuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAboutActionPerformed
        jDialogAbout.setSize(400, 200);
        jDialogAbout.setLocationRelativeTo(null);
        jDialogAbout.setVisible(true);
    }//GEN-LAST:event_jMenuItemAboutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pov_writer_ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pov_writer_ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pov_writer_ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pov_writer_ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pov_writer_ui().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCov;
    private javax.swing.JButton jButtonWrite;
    private javax.swing.JDialog jDialogAbout;
    private javax.swing.JLabel jLabelAuthor;
    private javax.swing.JLabel jLabelVersion;
    private javax.swing.JMenuBar jMenuBarTop;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuItemAbout;
    private javax.swing.JMenuItem jMenuItemOpen;
    private javax.swing.JMenuItem jMenuItemQuit;
    private javax.swing.JPanel jPanelBottom;
    private javax.swing.JPanel jPanelShow;
    private javax.swing.JScrollPane jScrollPaneText;
    private javax.swing.JTextArea jTextAreaHex;
    // End of variables declaration//GEN-END:variables
    private JLabel jLabelImage;
    private ImageIcon resizeImage;
    private ImageIcon covImage;
}
